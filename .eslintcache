[{"/Users/alex/Desktop/Social-Breeab/my-app/src/App.js":"1","/Users/alex/Desktop/Social-Breeab/my-app/src/index.js":"2","/Users/alex/Desktop/Social-Breeab/my-app/src/reportWebVitals.js":"3","/Users/alex/Desktop/Social-Breeab/my-app/src/firebase.js":"4","/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/PostContainer/PostContainer.js":"5","/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/PostContainer/Post/Post.js":"6","/Users/alex/Desktop/Social-Breeab/my-app/src/Sidebar/SidebarOption/SidebarOption.js":"7","/Users/alex/Desktop/Social-Breeab/my-app/src/Sidebar/Sidebar.js":"8","/Users/alex/Desktop/Social-Breeab/my-app/src/Widgets/Widgets.js":"9","/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/Feed.js":"10","/Users/alex/Desktop/Social-Breeab/my-app/src/DeleteButton/EditButton.js":"11","/Users/alex/Desktop/Social-Breeab/my-app/src/redux/home-reducer.js":"12","/Users/alex/Desktop/Social-Breeab/my-app/src/redux/redux-store.js":"13"},{"size":306,"mtime":1606317431000,"results":"14","hashOfConfig":"15"},{"size":627,"mtime":1606510842000,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1606139632000,"results":"17","hashOfConfig":"15"},{"size":672,"mtime":1606473019000,"results":"18","hashOfConfig":"15"},{"size":3419,"mtime":1606560286000,"results":"19","hashOfConfig":"15"},{"size":2405,"mtime":1606497549000,"results":"20","hashOfConfig":"15"},{"size":292,"mtime":1606317355000,"results":"21","hashOfConfig":"15"},{"size":1177,"mtime":1606317365000,"results":"22","hashOfConfig":"15"},{"size":909,"mtime":1606317279000,"results":"23","hashOfConfig":"15"},{"size":1319,"mtime":1606491552000,"results":"24","hashOfConfig":"15"},{"size":2289,"mtime":1606496028000,"results":"25","hashOfConfig":"15"},{"size":467,"mtime":1606510626000,"results":"26","hashOfConfig":"15"},{"size":309,"mtime":1606510298000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1k478zs",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/Users/alex/Desktop/Social-Breeab/my-app/src/App.js",[],["61","62"],"/Users/alex/Desktop/Social-Breeab/my-app/src/index.js",[],["63","64"],"/Users/alex/Desktop/Social-Breeab/my-app/src/reportWebVitals.js",[],["65","66"],"/Users/alex/Desktop/Social-Breeab/my-app/src/firebase.js",[],["67","68"],"/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/PostContainer/PostContainer.js",["69"],"import { Avatar, Button, CircularProgress } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport db from \"../../firebase\";\nimport { setIsFetching } from \"../../redux/home-reducer\";\nimport \"./PostContainer.css\";\n\nfunction PostContainer(props) {\n  const [postMessage, setPostMessage] = useState(\"\");\n  const [postImage, setPostImage] = useState(\"\");\n  // const [allowPost,setAllowPost] = useState(false);\n\n  const [time, setTime] = useState(\n    moment(Date().toLocaleString()).format(\"h:mm:ss a,Do YYYY\")\n  );\n\n  const imageInput = async (e) => {\n    props.setIsFetching(true);\n\n    // uploads the file to storage and gives the url of it to setPostImage\n    const file = e.target.files[0];\n\n    const storageRef = db.storage().ref();\n\n    const fileRef = storageRef.child(file.name);\n\n    await fileRef.put(file);\n\n    fileRef.getDownloadURL().then((url) => {\n      setPostImage(url);\n      console.log(\"uloaded\");\n      props.setIsFetching(false);\n    });\n  };\n\n  // const imageInput = async (e) => {\n\n  //     // uploads the file to storage and gives the url of it to setPostImage\n  //     const file = e.target.files[0];\n\n  //     console.log('file: ',file);\n  //     const storageRef = db.storage().ref();\n  //     console.log('storage Ref : ',storageRef);\n\n  //     const fileRef = storageRef.child(file.name);\n\n  //     console.log('fileRef : ',fileRef);\n\n  //     await fileRef.put(file);\n\n  //     setPostImage(await fileRef.getDownloadURL());\n  //   }\n\n  const addPost = (e) => {\n    if (postImage !== \"\" || postMessage !== \"\") {\n      e.preventDefault();\n      setTime(moment(Date().toLocaleString()).format(\"h:mm:ss a,  Do YYYY\"));\n\n      db.firestore().collection(\"posts\").add({\n        displayName: \"Alex Louttchenko\",\n        userName: \"loottch\",\n        time: time,\n        verified: true,\n        text: postMessage,\n        image: postImage,\n        avatar: \"https://i.redd.it/8mtr9ctkz9rx.jpg\",\n      });\n      setPostMessage(\"\");\n      setPostImage(\"\");\n\n    } else {\n      e.preventDefault();\n      alert(\"Your post should contain text or image!\");\n    }\n  };\n\n  return (\n    <div className=\"post\">\n      <form onSubmit={addPost}>\n        <div className=\"post--input\">\n          <Avatar className=\"profile\" />\n          <textarea\n            value={postMessage}\n            placeholder=\"Write your post!\"\n            type=\"text\"\n            onChange={(e) => setPostMessage(e.target.value)}\n          />\n        </div>\n\n        <div className=\"input-buttons\">\n          {props.isFetching && (\n            <div className=\"preloader__Wrapper\">\n              <CircularProgress color=\"secondary\" size={20} />\n            </div>\n          )}\n\n          <div className=\"file__uploadWrapper\">\n            <span>\n              <label for=\"file-upload\" class=\"custom__FileUpload\">\n                Upload file\n              </label>\n            </span>\n            <input id=\"file-upload\" type=\"file\" onChange={imageInput} />\n          </div>\n\n          <div className=\"post--buttonWrapper\">\n            <Button type=\"submit\" className=\"post--button\">\n              Post\n            </Button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => ({\n  isFetching: state.home.isFetching,\n});\n\nexport default connect(mapStateToProps, { setIsFetching })(PostContainer);\n","/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/PostContainer/Post/Post.js",["70","71","72","73","74"],"import { Avatar } from \"@material-ui/core\";\nimport VerifiedUserRoundedIcon from \"@material-ui/icons/VerifiedUserRounded\";\nimport TextsmsRoundedIcon from \"@material-ui/icons/TextsmsRounded\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport RepeatRoundedIcon from \"@material-ui/icons/RepeatRounded\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport React, { forwardRef, useEffect, useState } from \"react\";\nimport \"./Post.css\";\nimport db from \"../../../firebase\";\nimport EditButton from \"../../../DeleteButton/EditButton\";\n\nconst Post = forwardRef(({ post }, ref) => {\n  const [text, setText] = useState(post.text);\n\n  const onDelete = () => {\n    db.firestore().collection(\"posts\").doc(post.id).delete();\n  };\n\n  return (\n    <div className=\"feed--post\" ref={ref}>\n      <div className=\"post--avatar\">\n        <Avatar src={post.avatar} />\n      </div>\n      <div className=\"post--body\">\n        <div className=\"post--header\">\n          <div className=\"post--textHeader\">\n            <h3 className=\"user__Infowrapper\">\n              <span className=\"post--userName\">\n                {post.displayName}\n                {\"  \"}\n              </span>\n              <span className=\"post-verified\">\n                {post.verified && (\n                  <VerifiedUserRoundedIcon className=\"post--budge\" />\n                )}\n                <span>\n                  {\"  \"} @{post.userName}\n                </span>\n              </span>\n            </h3>\n            <div className=\"auxiliary__ButtonsWrapper\">\n            <span className=\"edit__PostWrapper\">\n              {/* onClick={onUpdate} */}\n              <EditButton postText={post.text} post={post} />\n            </span>\n            <span className=\"delete__PostWrapper\">\n              <DeleteIcon onClick={onDelete} />\n            </span>\n            </div>\n          </div>\n          <span className=\"post__time\">{post.time}</span>\n\n\n          <div className=\"post--description\">\n            <p>{post.text}</p>\n            {/* <input value={text} onChange={e=>{setText(e.target.value)}}/> */}\n          </div>\n        </div>\n\n        <img src={post.image} />\n\n        <div className=\"post--footer\">\n          <FavoriteIcon fontSize=\"small\" />\n          <TextsmsRoundedIcon />\n          <RepeatRoundedIcon />\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default Post;\n","/Users/alex/Desktop/Social-Breeab/my-app/src/Sidebar/SidebarOption/SidebarOption.js",[],"/Users/alex/Desktop/Social-Breeab/my-app/src/Sidebar/Sidebar.js",[],"/Users/alex/Desktop/Social-Breeab/my-app/src/Widgets/Widgets.js",["75","76","77"],"import React from 'react';\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport { TwitterTimelineEmbed,TwitterShareButton,TwitterTweetEmbed} from 'react-twitter-embed';\n\nconst Widgets=()=>{\n    return (\n        <div className=\"widgets\">\n            <div className=\"widgets--input\">\n                <SearchIcon className=\"widgets--searchIcon\"/>\n                <input placeholder=\"Search\" type=\"text\"/>\n            </div>\n            {/* <div className=\"widgets--widgetContaienr\">\n                <TwitterTweetEmbed className=\"r-14lw9ot\" tweetId=\"1329785897752145921\" options={{height:250}} />\n                <TwitterTimelineEmbed sourceType=\"profile\" screenName=\"dan_abramov\" options={{height:350}}/>\n                <TwitterShareButton url={\"https://www.facebook.com/Louttchenko/\"} options={{text:\"#ReactJS\" ,via:'louttchenko'}} />\n            </div> */}\n        </div>\n    )\n}\n\nexport default Widgets\n","/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/Feed.js",[],"/Users/alex/Desktop/Social-Breeab/my-app/src/DeleteButton/EditButton.js",[],"/Users/alex/Desktop/Social-Breeab/my-app/src/redux/home-reducer.js",[],"/Users/alex/Desktop/Social-Breeab/my-app/src/redux/redux-store.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"80","replacedBy":"83"},{"ruleId":"78","replacedBy":"84"},{"ruleId":"80","replacedBy":"85"},{"ruleId":"78","replacedBy":"86"},{"ruleId":"80","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":3,"column":17,"nodeType":"90","messageId":"91","endLine":3,"endColumn":26},{"ruleId":"88","severity":1,"message":"92","line":6,"column":8,"nodeType":"90","messageId":"91","endLine":6,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":9,"column":29,"nodeType":"90","messageId":"91","endLine":9,"endColumn":38},{"ruleId":"88","severity":1,"message":"93","line":15,"column":10,"nodeType":"90","messageId":"91","endLine":15,"endColumn":14},{"ruleId":"88","severity":1,"message":"94","line":15,"column":16,"nodeType":"90","messageId":"91","endLine":15,"endColumn":23},{"ruleId":"95","severity":1,"message":"96","line":62,"column":9,"nodeType":"97","endLine":62,"endColumn":33},{"ruleId":"88","severity":1,"message":"98","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":30},{"ruleId":"88","severity":1,"message":"99","line":3,"column":31,"nodeType":"90","messageId":"91","endLine":3,"endColumn":49},{"ruleId":"88","severity":1,"message":"100","line":3,"column":50,"nodeType":"90","messageId":"91","endLine":3,"endColumn":67},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],["101"],["102"],["101"],["102"],["101"],["102"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'EditIcon' is defined but never used.","'text' is assigned a value but never used.","'setText' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TwitterTimelineEmbed' is defined but never used.","'TwitterShareButton' is defined but never used.","'TwitterTweetEmbed' is defined but never used.","no-global-assign","no-unsafe-negation"]