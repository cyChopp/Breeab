[{"/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/Feed.js":"1","/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/Home/Home.js":"2","/Users/alex/Desktop/Social-Breeab/my-app/src/DeleteButton/EditButton.js":"3","/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/Profile/Profile.js":"4","/Users/alex/Desktop/Social-Breeab/my-app/src/Sidebar/Sidebar.js":"5","/Users/alex/Desktop/Social-Breeab/my-app/src/Sidebar/SidebarOption/SidebarOption.js":"6","/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/PostContainer/Post/Post.js":"7","/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/List/List.js":"8","/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/PostContainer/PostContainer.js":"9","/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/Messages/Messages.js":"10","/Users/alex/Desktop/Social-Breeab/my-app/src/SignUp/SignUp.js":"11","/Users/alex/Desktop/Social-Breeab/my-app/src/StinckyTop/StickyTop.js":"12","/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/FeedWrapper.js":"13","/Users/alex/Desktop/Social-Breeab/my-app/src/App.js":"14","/Users/alex/Desktop/Social-Breeab/my-app/src/redux/redux-store.js":"15","/Users/alex/Desktop/Social-Breeab/my-app/src/redux/home-reducer.js":"16","/Users/alex/Desktop/Social-Breeab/my-app/src/Widgets/Widgets.js":"17","/Users/alex/Desktop/Social-Breeab/my-app/src/reportWebVitals.js":"18"},{"size":628,"mtime":1606583816000,"results":"19","hashOfConfig":"20"},{"size":1416,"mtime":1606584142000,"results":"21","hashOfConfig":"20"},{"size":2289,"mtime":1606496028000,"results":"22","hashOfConfig":"20"},{"size":303,"mtime":1606584319000,"results":"23","hashOfConfig":"20"},{"size":1625,"mtime":1606583828000,"results":"24","hashOfConfig":"20"},{"size":292,"mtime":1606317355000,"results":"25","hashOfConfig":"20"},{"size":2357,"mtime":1606574523000,"results":"26","hashOfConfig":"20"},{"size":292,"mtime":1606584346000,"results":"27","hashOfConfig":"20"},{"size":3419,"mtime":1606581749000,"results":"28","hashOfConfig":"20"},{"size":303,"mtime":1606584350000,"results":"29","hashOfConfig":"20"},{"size":6206,"mtime":1606683835000,"results":"30","hashOfConfig":"20"},{"size":208,"mtime":1606582059000,"results":"31","hashOfConfig":"20"},{"size":212,"mtime":1606584095000,"results":"32","hashOfConfig":"20"},{"size":306,"mtime":1606578144000,"results":"33","hashOfConfig":"20"},{"size":309,"mtime":1606510298000,"results":"34","hashOfConfig":"20"},{"size":467,"mtime":1606510626000,"results":"35","hashOfConfig":"20"},{"size":909,"mtime":1606317279000,"results":"36","hashOfConfig":"20"},{"size":362,"mtime":1606139632000,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1k478zs",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"40"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/Feed.js",[],["89","90"],"/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/Home/Home.js",["91"],"import React, { useEffect, useState } from \"react\";\nimport \"./Home.css\";\nimport Post from \"../PostContainer/Post/Post\";\nimport PostContainer from \"../PostContainer/PostContainer\";\nimport db from \"../../firebase\";\nimport { Link } from \"react-router-dom\";\nimport StickyTop from \"../../StinckyTop/StickyTop\";\nimport FeedWrapper from \"../FeedWrapper\";\n\nconst Home = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    db.firestore()\n      .collection(\"posts\")\n      .orderBy(\"time\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setPosts(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n        console.log(snapshot.docs);\n      });\n    // const fetchData = async ()=>{\n    //   const data =await db.firestore().collection('posts').orderBy('time','desc').get();\n    //     data.forEach(doc=>console.log(doc.id))\n\n    //   setPosts(data.docs.map(doc=>({...doc.data(),id:doc.id})))\n    // };\n\n    // fetchData();\n  }, []);\n\n  return (\n    <FeedWrapper>\n      <StickyTop header={\"Home\"}/>\n        \n\n      <PostContainer />\n      {posts.map((post) => (\n        <Post\n          displayName={post.displayName}\n          userName={post.userName}\n          time={post.time}\n          verified={post.verified}\n          text={post.text}\n          image={post.image}\n          avatar={post.avatar}\n          post={post}\n        />\n      ))}\n    </FeedWrapper>\n  );\n};\n\nexport default Home;\n",["92","93"],"/Users/alex/Desktop/Social-Breeab/my-app/src/DeleteButton/EditButton.js",[],"/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/Profile/Profile.js",["94"],"import { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport FeedWrapper from \"../FeedWrapper\";\nimport StickyTop from \"../../StinckyTop/StickyTop\";\n\nconst Profile = () => {\n  return( \n    <FeedWrapper>\n      <StickyTop header={\"Profile\"}/>\n  </FeedWrapper>\n  )\n};\n\nexport default Profile;\n",["95","96"],"/Users/alex/Desktop/Social-Breeab/my-app/src/Sidebar/Sidebar.js",[],"/Users/alex/Desktop/Social-Breeab/my-app/src/Sidebar/SidebarOption/SidebarOption.js",[],["97","98"],"/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/PostContainer/Post/Post.js",["99","100","101","102","103"],"import { Avatar } from \"@material-ui/core\";\nimport VerifiedUserRoundedIcon from \"@material-ui/icons/VerifiedUserRounded\";\nimport TextsmsRoundedIcon from \"@material-ui/icons/TextsmsRounded\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport RepeatRoundedIcon from \"@material-ui/icons/RepeatRounded\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport React, { forwardRef, useEffect, useState } from \"react\";\nimport \"./Post.css\";\nimport db from \"../../../firebase\";\nimport EditButton from \"../../../DeleteButton/EditButton\";\n\nconst Post = forwardRef(({ post }, ref) => {\n  const [text, setText] = useState(post.text);\n\n  const onDelete = () => {\n    db.firestore().collection(\"posts\").doc(post.id).delete();\n  };\n\n  return (\n    <div className=\"feed--post\" ref={ref}>\n\n      <div className=\"post--avatar\">\n        <Avatar src={post.avatar} />\n      </div>\n\n      <div className=\"post--body\">\n\n        <div className=\"post--header\">\n\n          <div className=\"post--textHeader\">\n\n            <h3 className=\"user__Infowrapper\">\n              <span className=\"post--userName\">\n                {post.displayName}\n                {\"  \"}\n              </span>\n              <span className=\"post-verified\">\n                {post.verified && (\n                  <VerifiedUserRoundedIcon className=\"post--budge\" />\n                )}\n                <span>\n                  {\"  \"} @{post.userName}\n                </span>\n              </span>\n            </h3>\n\n            <div className=\"auxiliary__ButtonsWrapper\">\n              <span className=\"edit__PostWrapper\">\n                {/* onClick={onUpdate} */}\n                <EditButton postText={post.text} post={post} />\n              </span>\n              <span className=\"delete__PostWrapper\">\n                <DeleteIcon onClick={onDelete} />\n              </span>\n            </div>\n            \n          </div>\n\n          <span className=\"post__time\">{post.time}</span>\n\n          <div className=\"post--description\">\n            <p>{post.text}</p>\n          </div>\n        </div>\n\n        <img src={post.image} />\n\n        <div className=\"post--footer\">\n          <FavoriteIcon fontSize=\"small\" />\n          <TextsmsRoundedIcon />\n          <RepeatRoundedIcon />\n        </div>\n      </div>\n\n    </div>\n  );\n});\n\nexport default Post;\n",["104","105"],"/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/List/List.js",["106"],"import { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport FeedWrapper from \"../FeedWrapper\";\nimport StickyTop from \"../../StinckyTop/StickyTop\";\n\nconst List = () => {\n  return( \n    <FeedWrapper>\n    <StickyTop header={\"List\"}/>\n  </FeedWrapper>\n  )\n};\n\nexport default List;\n",["107","108"],"/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/PostContainer/PostContainer.js",["109"],"import { Avatar, Button, CircularProgress } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport db from \"../../firebase\";\nimport { setIsFetching } from \"../../redux/home-reducer\";\nimport \"./PostContainer.css\";\n\nfunction PostContainer(props) {\n  const [postMessage, setPostMessage] = useState(\"\");\n  const [postImage, setPostImage] = useState(\"\");\n  // const [allowPost,setAllowPost] = useState(false);\n\n  const [time, setTime] = useState(\n    moment(Date().toLocaleString()).format(\"h:mm:ss a,Do YYYY\")\n  );\n\n  const imageInput = async (e) => {\n    props.setIsFetching(true);\n\n    // uploads the file to storage and gives the url of it to setPostImage\n    const file = e.target.files[0];\n\n    const storageRef = db.storage().ref();\n\n    const fileRef = storageRef.child(file.name);\n\n    await fileRef.put(file);\n\n    fileRef.getDownloadURL().then((url) => {\n      setPostImage(url);\n      console.log(\"uloaded\");\n      props.setIsFetching(false);\n    });\n  };\n\n  // const imageInput = async (e) => {\n\n  //     // uploads the file to storage and gives the url of it to setPostImage\n  //     const file = e.target.files[0];\n\n  //     console.log('file: ',file);\n  //     const storageRef = db.storage().ref();\n  //     console.log('storage Ref : ',storageRef);\n\n  //     const fileRef = storageRef.child(file.name);\n\n  //     console.log('fileRef : ',fileRef);\n\n  //     await fileRef.put(file);\n\n  //     setPostImage(await fileRef.getDownloadURL());\n  //   }\n\n  const addPost = (e) => {\n    if (postImage !== \"\" || postMessage !== \"\") {\n      e.preventDefault();\n      setTime(moment(Date().toLocaleString()).format(\"h:mm:ss a,  Do YYYY\"));\n\n      db.firestore().collection(\"posts\").add({\n        displayName: \"Alex Louttchenko\",\n        userName: \"loottch\",\n        time: time,\n        verified: true,\n        text: postMessage,\n        image: postImage,\n        avatar: \"https://i.redd.it/8mtr9ctkz9rx.jpg\",\n      });\n      setPostMessage(\"\");\n      setPostImage(\"\");\n\n    } else {\n      e.preventDefault();\n      alert(\"Your post should contain text or image!\");\n    }\n  };\n\n  return (\n    <div className=\"post\">\n      <form onSubmit={addPost}>\n        <div className=\"post--input\">\n          <Avatar className=\"profile\" />\n          <textarea\n            value={postMessage}\n            placeholder=\"Write your post!\"\n            type=\"text\"\n            onChange={(e) => setPostMessage(e.target.value)}\n          />\n        </div>\n\n        <div className=\"input-buttons\">\n          {props.isFetching && (\n            <div className=\"preloader__Wrapper\">\n              <CircularProgress color=\"secondary\" size={20} />\n            </div>\n          )}\n\n          <div className=\"file__uploadWrapper\">\n            <span>\n              <label for=\"file-upload\" class=\"custom__FileUpload\">\n                Upload file\n              </label>\n            </span>\n            <input id=\"file-upload\" type=\"file\" onChange={imageInput} />\n          </div>\n\n          <div className=\"post--buttonWrapper\">\n            <Button type=\"submit\" className=\"post--button\">\n              Post\n            </Button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => ({\n  isFetching: state.home.isFetching,\n});\n\nexport default connect(mapStateToProps, { setIsFetching })(PostContainer);\n",["110","111"],"/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/Messages/Messages.js",["112"],"import { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport FeedWrapper from \"../FeedWrapper\";\nimport StickyTop from \"../../StinckyTop/StickyTop\";\n\nconst Messages = () => {\n  return( \n    <FeedWrapper>\n    <StickyTop header={\"Message\"}/>\n  </FeedWrapper>\n  )\n};\n\nexport default Messages;\n","/Users/alex/Desktop/Social-Breeab/my-app/src/SignUp/SignUp.js",["113","114","115","116"],"import { CircularProgress, TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport FeedWrapper from \"../Feed/FeedWrapper\";\nimport db from \"../firebase\";\nimport StickyTop from \"../StinckyTop/StickyTop\";\nimport \"./SignUp.css\";\n\nconst SignUp = () => {\n  const [user, setUser] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [hasAccount, setHasAccount] = useState(false);\n  const [pending, setPending] = useState(true);\n\n  const clearInputs = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n\n  const { register, handleSubmit, errors, control } = useForm();\n\n  const handleSignIn = (data) => {\n    debugger;\n    clearErrors();\n    console.log(data);\n    db.auth()\n      .signInWithEmailAndPassword(data.email, data.password)\n      .catch((errors) => {\n        switch (errors.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(errors.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(errors.message);\n            break;\n\n          default:\n            return console.log(\"other case error\");\n        }\n      });\n    setEmail(data.email);\n    setPassword(data.password);\n  };\n  const handleSignUp = (data) => {\n    debugger;\n\n    clearErrors();\n    console.log(data);\n    db.auth()\n      .createUserWithEmailAndPassword(data.email, data.password)\n      .catch((errors) => {\n        switch (errors.code) {\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(errors.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(errors.message);\n            break;\n\n          default:\n            return console.log(\"other case error\");\n        }\n      });\n\n    setEmail(data.email);\n    setPassword(data.password);\n  };\n\n  const handleLogOut = () => {\n    db.auth().signOut();\n  };\n\n  // user Exists?\n  const authListener = () => {\n    db.auth().onAuthStateChanged((user) => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setPending(false);\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  // if(pending){\n  //   return <>Loading...</>\n  // }\n\n  return (\n    <FeedWrapper>\n      <StickyTop header={\"Sign Up\"} />\n\n      {pending ? (\n        <CircularProgress color=\"secondary\" size={50} />\n      ) : (\n        <div className=\"container__wrapper \">\n          <div className=\"container\">\n            {user ? (\n              <div onClick={handleLogOut}>Log Out</div>\n            ) : (\n              <form\n                onSubmit={handleSubmit(\n                  hasAccount ? handleSignIn : handleSignUp\n                )}\n              >\n                <Controller\n                  name=\"email\"\n                  ref={register}\n                  render={(props) => (\n                    <TextField\n                      color=\"secondary\"\n                      required\n                      {...props}\n                      label=\"email\"\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  )}\n                  control={control}\n                  defaultValue=\"\"\n                />\n                <p>{emailError}</p>\n                <Controller\n                  name=\"password\"\n                  ref={register}\n                  render={(props) => (\n                    <TextField\n                      color=\"secondary\"\n                      {...props}\n                      required\n                      label=\"password\"\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  )}\n                  control={control}\n                  defaultValue=\"\"\n                />\n                <p>{passwordError}</p>\n                <Controller\n                  name=\"passwordConfirmation\"\n                  ref={register}\n                  render={(props) => (\n                    <TextField\n                      color=\"secondary\"\n                      {...props}\n                      label=\"Confirm password\"\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  )}\n                  control={control}\n                  defaultValue=\"\"\n                />\n                <Controller\n                  name=\"username\"\n                  ref={register}\n                  render={(props) => (\n                    <TextField\n                      color=\"secondary\"\n                      required\n                      {...props}\n                      label=\"username\"\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  )}\n                  control={control}\n                  defaultValue=\"\"\n                />\n                {hasAccount ? (\n                  <>\n                    <Button type=\"submit\" color=\"secondary\">\n                      Sign In\n                    </Button>\n                    <p>\n                      Don't have an account?{\" \"}\n                      <span onClick={() => setHasAccount(!hasAccount)}>\n                        Sign Up\n                      </span>\n                    </p>\n                  </>\n                ) : (\n                  <>\n                    <Button type=\"submit\" color=\"secondary\">\n                      Sign Up\n                    </Button>\n                    <p>\n                      Have already an account?{\" \"}\n                      <span onClick={() => setHasAccount(!hasAccount)}>\n                        Sign in\n                      </span>{\" \"}\n                    </p>\n                  </>\n                )}\n              </form>\n            )}\n          </div>\n        </div>\n      )}\n    </FeedWrapper>\n  );\n};\n\nexport default SignUp;\n","/Users/alex/Desktop/Social-Breeab/my-app/src/StinckyTop/StickyTop.js",[],"/Users/alex/Desktop/Social-Breeab/my-app/src/Feed/FeedWrapper.js",[],"/Users/alex/Desktop/Social-Breeab/my-app/src/App.js",[],"/Users/alex/Desktop/Social-Breeab/my-app/src/redux/redux-store.js",[],"/Users/alex/Desktop/Social-Breeab/my-app/src/redux/home-reducer.js",[],"/Users/alex/Desktop/Social-Breeab/my-app/src/Widgets/Widgets.js",["117","118","119"],"import React from 'react';\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport { TwitterTimelineEmbed,TwitterShareButton,TwitterTweetEmbed} from 'react-twitter-embed';\n\nconst Widgets=()=>{\n    return (\n        <div className=\"widgets\">\n            <div className=\"widgets--input\">\n                <SearchIcon className=\"widgets--searchIcon\"/>\n                <input placeholder=\"Search\" type=\"text\"/>\n            </div>\n            {/* <div className=\"widgets--widgetContaienr\">\n                <TwitterTweetEmbed className=\"r-14lw9ot\" tweetId=\"1329785897752145921\" options={{height:250}} />\n                <TwitterTimelineEmbed sourceType=\"profile\" screenName=\"dan_abramov\" options={{height:350}}/>\n                <TwitterShareButton url={\"https://www.facebook.com/Louttchenko/\"} options={{text:\"#ReactJS\" ,via:'louttchenko'}} />\n            </div> */}\n        </div>\n    )\n}\n\nexport default Widgets\n","/Users/alex/Desktop/Social-Breeab/my-app/src/reportWebVitals.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":14},{"ruleId":"120","replacedBy":"128"},{"ruleId":"122","replacedBy":"129"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":10,"nodeType":"126","messageId":"127","endLine":1,"endColumn":14},{"ruleId":"120","replacedBy":"130"},{"ruleId":"122","replacedBy":"131"},{"ruleId":"120","replacedBy":"132"},{"ruleId":"122","replacedBy":"133"},{"ruleId":"124","severity":1,"message":"134","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":16},{"ruleId":"124","severity":1,"message":"135","line":9,"column":29,"nodeType":"126","messageId":"127","endLine":9,"endColumn":38},{"ruleId":"124","severity":1,"message":"136","line":15,"column":10,"nodeType":"126","messageId":"127","endLine":15,"endColumn":14},{"ruleId":"124","severity":1,"message":"137","line":15,"column":16,"nodeType":"126","messageId":"127","endLine":15,"endColumn":23},{"ruleId":"138","severity":1,"message":"139","line":68,"column":9,"nodeType":"140","endLine":68,"endColumn":33},{"ruleId":"120","replacedBy":"141"},{"ruleId":"122","replacedBy":"142"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":10,"nodeType":"126","messageId":"127","endLine":1,"endColumn":14},{"ruleId":"120","replacedBy":"143"},{"ruleId":"122","replacedBy":"144"},{"ruleId":"124","severity":1,"message":"135","line":3,"column":17,"nodeType":"126","messageId":"127","endLine":3,"endColumn":26},{"ruleId":"120","replacedBy":"145"},{"ruleId":"122","replacedBy":"146"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":10,"nodeType":"126","messageId":"127","endLine":1,"endColumn":14},{"ruleId":"124","severity":1,"message":"147","line":13,"column":10,"nodeType":"126","messageId":"127","endLine":13,"endColumn":15},{"ruleId":"124","severity":1,"message":"148","line":14,"column":10,"nodeType":"126","messageId":"127","endLine":14,"endColumn":18},{"ruleId":"124","severity":1,"message":"149","line":30,"column":35,"nodeType":"126","messageId":"127","endLine":30,"endColumn":41},{"ruleId":"150","severity":1,"message":"151","line":101,"column":6,"nodeType":"152","endLine":101,"endColumn":8,"suggestions":"153"},{"ruleId":"124","severity":1,"message":"154","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":30},{"ruleId":"124","severity":1,"message":"155","line":3,"column":31,"nodeType":"126","messageId":"127","endLine":3,"endColumn":49},{"ruleId":"124","severity":1,"message":"156","line":3,"column":50,"nodeType":"126","messageId":"127","endLine":3,"endColumn":67},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["157"],["158"],["157"],["158"],["157"],["158"],"'EditIcon' is defined but never used.","'useEffect' is defined but never used.","'text' is assigned a value but never used.","'setText' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["157"],["158"],["157"],["158"],["157"],["158"],"'email' is assigned a value but never used.","'password' is assigned a value but never used.","'errors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["159"],"'TwitterTimelineEmbed' is defined but never used.","'TwitterShareButton' is defined but never used.","'TwitterTweetEmbed' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},"Update the dependencies array to be: [authListener]",{"range":"162","text":"163"},[2600,2602],"[authListener]"]